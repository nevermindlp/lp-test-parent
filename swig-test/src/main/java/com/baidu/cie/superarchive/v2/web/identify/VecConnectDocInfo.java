/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.1.0
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.baidu.cie.superarchive.v2.web.identify;

public class VecConnectDocInfo extends java.util.AbstractList<ConnectDocInfo> implements java.util.RandomAccess {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected VecConnectDocInfo(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(VecConnectDocInfo obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        SearchDocModuleJNI.delete_VecConnectDocInfo(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public VecConnectDocInfo(ConnectDocInfo[] initialElements) {
    this();
    reserve(initialElements.length);

    for (ConnectDocInfo element : initialElements) {
      add(element);
    }
  }

  public VecConnectDocInfo(Iterable<ConnectDocInfo> initialElements) {
    this();
    for (ConnectDocInfo element : initialElements) {
      add(element);
    }
  }

  public ConnectDocInfo get(int index) {
    return doGet(index);
  }

  public ConnectDocInfo set(int index, ConnectDocInfo e) {
    return doSet(index, e);
  }

  public boolean add(ConnectDocInfo e) {
    modCount++;
    doAdd(e);
    return true;
  }

  public void add(int index, ConnectDocInfo e) {
    modCount++;
    doAdd(index, e);
  }

  public ConnectDocInfo remove(int index) {
    modCount++;
    return doRemove(index);
  }

  protected void removeRange(int fromIndex, int toIndex) {
    modCount++;
    doRemoveRange(fromIndex, toIndex);
  }

  public int size() {
    return doSize();
  }

  public VecConnectDocInfo() {
    this(SearchDocModuleJNI.new_VecConnectDocInfo__SWIG_0(), true);
  }

  public VecConnectDocInfo(VecConnectDocInfo other) {
    this(SearchDocModuleJNI.new_VecConnectDocInfo__SWIG_1(VecConnectDocInfo.getCPtr(other), other), true);
  }

  public long capacity() {
    return SearchDocModuleJNI.VecConnectDocInfo_capacity(swigCPtr, this);
  }

  public void reserve(long n) {
    SearchDocModuleJNI.VecConnectDocInfo_reserve(swigCPtr, this, n);
  }

  public boolean isEmpty() {
    return SearchDocModuleJNI.VecConnectDocInfo_isEmpty(swigCPtr, this);
  }

  public void clear() {
    SearchDocModuleJNI.VecConnectDocInfo_clear(swigCPtr, this);
  }

  public VecConnectDocInfo(int count, ConnectDocInfo value) {
    this(SearchDocModuleJNI.new_VecConnectDocInfo__SWIG_2(count, ConnectDocInfo.getCPtr(value), value), true);
  }

  private int doSize() {
    return SearchDocModuleJNI.VecConnectDocInfo_doSize(swigCPtr, this);
  }

  private void doAdd(ConnectDocInfo x) {
    SearchDocModuleJNI.VecConnectDocInfo_doAdd__SWIG_0(swigCPtr, this, ConnectDocInfo.getCPtr(x), x);
  }

  private void doAdd(int index, ConnectDocInfo x) {
    SearchDocModuleJNI.VecConnectDocInfo_doAdd__SWIG_1(swigCPtr, this, index, ConnectDocInfo.getCPtr(x), x);
  }

  private ConnectDocInfo doRemove(int index) {
    return new ConnectDocInfo(SearchDocModuleJNI.VecConnectDocInfo_doRemove(swigCPtr, this, index), true);
  }

  private ConnectDocInfo doGet(int index) {
    return new ConnectDocInfo(SearchDocModuleJNI.VecConnectDocInfo_doGet(swigCPtr, this, index), false);
  }

  private ConnectDocInfo doSet(int index, ConnectDocInfo val) {
    return new ConnectDocInfo(
            SearchDocModuleJNI.VecConnectDocInfo_doSet(swigCPtr, this, index, ConnectDocInfo.getCPtr(val), val), true);
  }

  private void doRemoveRange(int fromIndex, int toIndex) {
    SearchDocModuleJNI.VecConnectDocInfo_doRemoveRange(swigCPtr, this, fromIndex, toIndex);
  }

}
